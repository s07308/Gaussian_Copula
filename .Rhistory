hist(unlist(sim["bias", ]), xlab = NA)
par(mfrow = c(1, 5))
hist((unlist(sim["tau.hat", ]) / sd(unlist(sim["tau.hat", ]))) ^ 2,
main = "proposed",
xlab = "chisq",
freq = FALSE)
curve(dchisq(x, df = 1), from = 0, to = 50, add = TRUE)
hist(unlist(sim["logrank", ]), main = "logrank", xlab = "chisq", freq = FALSE)
curve(dchisq(x, df = 1), from = 0, to = 50, add = TRUE)
hist(unlist(sim["gehan", ]), main = "Gehan", xlab = "chisq", freq = FALSE)
curve(dchisq(x, df = 1), from = 0, to = 50, add = TRUE)
hist(unlist(sim["wilcox", ]), main = "Wilcoxon", xlab = "chisq", freq = FALSE)
curve(dchisq(x, df = 1), from = 0, to = 50, add = TRUE)
hist(unlist(sim["gehan2", ]), main = "Gehan2", xlab = "z", freq = FALSE)
curve(dnorm(x, mean = 0, sd = 1), from = -5, to = 5, add = TRUE)
mean(unlist(sim["bias", ]))
sd(unlist(sim["bias", ]))
mean(unlist(sim["tau.true", ]))
mean(unlist(sim["tau.hat", ]))
mean(unlist(sim["C.rate", ]))
proposed.ts <- (unlist(sim["tau.hat", ]) / sd(unlist(sim["tau.hat", ]))) ^ 2
mean(proposed.ts > qchisq(0.95, df = 1))
mean(unlist(sim["logrank", ]) > qchisq(0.95, df = 1))
mean(unlist(sim["gehan", ]) > qchisq(0.95, df = 1))
mean(unlist(sim["wilcox", ]) > qchisq(0.95, df = 1))
mean(abs(unlist(sim["gehan2", ])) > qnorm(0.975, mean = 0, sd = 1))
sd(proposed.ts > qchisq(0.95, df = 1))
sd(unlist(sim["logrank", ]) > qchisq(0.95, df = 1))
sd(unlist(sim["gehan", ]) > qchisq(0.95, df = 1))
sd(unlist(sim["wilcox", ]) > qchisq(0.95, df = 1))
sd(abs(unlist(sim["gehan2", ])) > qnorm(0.975, mean = 0, sd = 1))
C.rate <- 0.12
size <- 200
set.seed(20200630)
sim <- replicate(n = 500, expr = {
## generate (Y, delta, X), where X is binary and Y is lifetime with censoring
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T1 <- rweibull(n = size, shape = 2, scale = 1)
C <- rexp(n = size, rate = C.rate)
Y1 <- ifelse(T1 < C, T1, C)
delta <- ifelse(T1 < C, 1, 0)
return(impute_binary_tau(Y1, delta, X1, T1))
})
hist(unlist(sim["bias", ]), xlab = NA)
par(mfrow = c(1, 5))
hist((unlist(sim["tau.hat", ]) / sd(unlist(sim["tau.hat", ]))) ^ 2,
main = "proposed",
xlab = "chisq",
freq = FALSE)
curve(dchisq(x, df = 1), from = 0, to = 50, add = TRUE)
hist(unlist(sim["logrank", ]), main = "logrank", xlab = "chisq", freq = FALSE)
curve(dchisq(x, df = 1), from = 0, to = 50, add = TRUE)
hist(unlist(sim["gehan", ]), main = "Gehan", xlab = "chisq", freq = FALSE)
curve(dchisq(x, df = 1), from = 0, to = 50, add = TRUE)
hist(unlist(sim["wilcox", ]), main = "Wilcoxon", xlab = "chisq", freq = FALSE)
curve(dchisq(x, df = 1), from = 0, to = 50, add = TRUE)
hist(unlist(sim["gehan2", ]), main = "Gehan2", xlab = "z", freq = FALSE)
curve(dnorm(x, mean = 0, sd = 1), from = -5, to = 5, add = TRUE)
mean(unlist(sim["bias", ]))
sd(unlist(sim["bias", ]))
mean(unlist(sim["tau.true", ]))
mean(unlist(sim["tau.hat", ]))
mean(unlist(sim["C.rate", ]))
proposed.ts <- (unlist(sim["tau.hat", ]) / sd(unlist(sim["tau.hat", ]))) ^ 2
mean(proposed.ts > qchisq(0.95, df = 1))
mean(unlist(sim["logrank", ]) > qchisq(0.95, df = 1))
mean(unlist(sim["gehan", ]) > qchisq(0.95, df = 1))
mean(unlist(sim["wilcox", ]) > qchisq(0.95, df = 1))
mean(abs(unlist(sim["gehan2", ])) > qnorm(0.975, mean = 0, sd = 1))
sd(proposed.ts > qchisq(0.95, df = 1))
sd(unlist(sim["logrank", ]) > qchisq(0.95, df = 1))
sd(unlist(sim["gehan", ]) > qchisq(0.95, df = 1))
sd(unlist(sim["wilcox", ]) > qchisq(0.95, df = 1))
sd(abs(unlist(sim["gehan2", ])) > qnorm(0.975, mean = 0, sd = 1))
Gehan_func <- function(Y1, delta, X1) {
m <- sum(X1 == 1)
n <- sum(X1 == 0)
Gehan.score <- numeric(length(Y1))
for(i in seq(1, length(Y1))) {
Gehan.score[i] <- sum(Y1[i] > Y1 & (delta == 1)) - sum(Y1[i] < Y1 & (delta[i] == 1))
}
ts <- sum(Gehan.score[X1 == 1])
sigma2 <- sum(Gehan.score ^ 2) / (m + n)
v <- m * n * sigma2 / (m + n - 1)
return(list(z = ts / sqrt(v), score = Gehan.score))
}
MannWhitney_func <- function(Y1, delta, X1, T1) {
m <- sum(X1 == 1)
n <- sum(X1 == 0)
MW.score <- numeric(length(T1))
for(i in seq(1, length(T1))) {
MW.score[i] <- sum(T1[i] > T1) - sum(T1[i] < T1)
}
ts <- sum(MW.score[X1 == 1])
return(list(score = MW.score))
MannWhitney_func <- function(Y1, delta, X1, T1) {
m <- sum(X1 == 1)
n <- sum(X1 == 0)
MW.score <- numeric(length(T1))
for(i in seq(1, length(T1))) {
MW.score[i] <- sum(T1[i] > T1) - sum(T1[i] < T1)
}
ts <- sum(MW.score[X1 == 1])
return(list(score = MW.score))
}
sd
}
Gehan_func <- function(Y1, delta, X1) {
m <- sum(X1 == 1)
n <- sum(X1 == 0)
Gehan.score <- numeric(length(Y1))
for(i in seq(1, length(Y1))) {
Gehan.score[i] <- sum(Y1[i] > Y1 & (delta == 1)) - sum(Y1[i] < Y1 & (delta[i] == 1))
}
ts <- sum(Gehan.score[X1 == 1])
sigma2 <- sum(Gehan.score ^ 2) / (m + n)
v <- m * n * sigma2 / (m + n - 1)
return(list(z = ts / sqrt(v), score = Gehan.score))
}
MannWhitney_func <- function(Y1, delta, X1, T1) {
m <- sum(X1 == 1)
n <- sum(X1 == 0)
MW.score <- numeric(length(T1))
for(i in seq(1, length(T1))) {
MW.score[i] <- sum(T1[i] > T1) - sum(T1[i] < T1)
}
ts <- sum(MW.score[X1 == 1])
return(list(score = MW.score))
}
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
C <- rexp(n = size, rate = C.rate)
Y1 <- ifelse(T1 < C, T1, C)
delta <- ifelse(T1 < C, 1, 0)
Gehan_func(Y1, delta, X1)
MannWhitney_func(Y1, delta, X1, T1)
Gehan_func <- function(Y1, delta, X1) {
m <- sum(X1 == 1)
n <- sum(X1 == 0)
Gehan.score <- numeric(length(Y1))
for(i in seq(1, length(Y1))) {
Gehan.score[i] <- sum(Y1[i] > Y1 & (delta == 1)) - sum(Y1[i] < Y1 & (delta[i] == 1))
}
ts <- sum(Gehan.score[X1 == 1])
sigma2 <- sum(Gehan.score ^ 2) / (m + n)
v <- m * n * sigma2 / (m + n - 1)
return(list(z = ts / sqrt(v), score = Gehan.score))
}
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
C <- rexp(n = size, rate = C.rate)
Y1 <- ifelse(T1 < C, T1, C)
delta <- ifelse(T1 < C, 1, 0)
Gehan_func(Y1, delta, X1)
MannWhitney_func(Y1, delta, X1, T1)
MannWhitney_func <- function(Y1, delta, X1, T1) {
m <- sum(X1 == 1)
n <- sum(X1 == 0)
MW.score <- numeric(length(T1))
for(i in seq(1, length(T1))) {
MW.score[i] <- sum(T1[i] > T1) - sum(T1[i] < T1)
}
ts <- sum(MW.score[X1 == 1])
return(list(z = sum(ts), score = MW.score))
}
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
C <- rexp(n = size, rate = C.rate)
Y1 <- ifelse(T1 < C, T1, C)
delta <- ifelse(T1 < C, 1, 0)
Gehan_func(Y1, delta, X1)
MannWhitney_func(Y1, delta, X1, T1)
MannWhitney_func <- function(Y1, delta, X1, T1) {
m <- sum(X1 == 1)
n <- sum(X1 == 0)
MW.score <- numeric(length(T1))
for(i in seq(1, length(T1))) {
MW.score[i] <- sum(T1[i] > T1) - sum(T1[i] < T1)
}
ts <- sum(MW.score[X1 == 1])
sigma2 <- sum(MW.score ^ 2) / (m + n)
v <- m * n * sigma2 / (m + n - 1)
return(list(z = sum(ts) / sqrt(v), score = MW.score))
}
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
C <- rexp(n = size, rate = C.rate)
Y1 <- ifelse(T1 < C, T1, C)
delta <- ifelse(T1 < C, 1, 0)
Gehan_func(Y1, delta, X1)
MannWhitney_func(Y1, delta, X1, T1)
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
C <- rexp(n = size, rate = C.rate)
Y1 <- ifelse(T1 < C, T1, C)
delta <- ifelse(T1 < C, 1, 0)
Gehan_func(Y1, delta, X1)
MannWhitney_func(Y1, delta, X1, T1)
impute_binary_tau(Y1, delta, X1, T1)$tau.hat
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
C <- rexp(n = size, rate = C.rate)
Y1 <- ifelse(T1 < C, T1, C)
delta <- ifelse(T1 < C, 1, 0)
Gehan_func(Y1, delta, X1)
MannWhitney_func(Y1, delta, X1, T1)
impute_binary_tau(Y1, delta, X1, T1)$tau.hat
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
C <- rexp(n = size, rate = C.rate)
Y1 <- ifelse(T1 < C, T1, C)
delta <- ifelse(T1 < C, 1, 0)
Gehan_func(Y1, delta, X1)
MannWhitney_func(Y1, delta, X1, T1)
impute_binary_tau(Y1, delta, X1, T1)$tau.hat
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
C <- rexp(n = size, rate = C.rate)
Y1 <- ifelse(T1 < C, T1, C)
delta <- ifelse(T1 < C, 1, 0)
Gehan_func(Y1, delta, X1)
MannWhitney_func(Y1, delta, X1, T1)
impute_binary_tau(Y1, delta, X1, T1)$tau.hat
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
C <- rexp(n = size, rate = C.rate)
Y1 <- ifelse(T1 < C, T1, C)
delta <- ifelse(T1 < C, 1, 0)
Gehan_func(Y1, delta, X1)
MannWhitney_func(Y1, delta, X1, T1)
impute_binary_tau(Y1, delta, X1, T1)$tau.hat
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
C <- rexp(n = size, rate = C.rate)
Y1 <- ifelse(T1 < C, T1, C)
delta <- ifelse(T1 < C, 1, 0)
Gehan_func(Y1, delta, X1)
MannWhitney_func(Y1, delta, X1, T1)
impute_binary_tau(Y1, delta, X1, T1)$tau.hat
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
C <- rexp(n = size, rate = C.rate)
Y1 <- ifelse(T1 < C, T1, C)
delta <- ifelse(T1 < C, 1, 0)
Gehan_func(Y1, delta, X1)
MannWhitney_func(Y1, delta, X1, T1)
impute_binary_tau(Y1, delta, X1, T1)$tau.hat
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
C <- rexp(n = size, rate = C.rate)
Y1 <- ifelse(T1 < C, T1, C)
delta <- ifelse(T1 < C, 1, 0)
Gehan_func(Y1, delta, X1)
MannWhitney_func(Y1, delta, X1, T1)
impute_binary_tau(Y1, delta, X1, T1)$tau.hat
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
C <- rexp(n = size, rate = C.rate)
Y1 <- ifelse(T1 < C, T1, C)
delta <- ifelse(T1 < C, 1, 0)
Gehan_func(Y1, delta, X1)
MannWhitney_func(Y1, delta, X1, T1)
impute_binary_tau(Y1, delta, X1, T1)$tau.hat
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
C <- rexp(n = size, rate = C.rate)
Y1 <- ifelse(T1 < C, T1, C)
delta <- ifelse(T1 < C, 1, 0)
Gehan_func(Y1, delta, X1)
MannWhitney_func(Y1, delta, X1, T1)
impute_binary_tau(Y1, delta, X1, T1)$tau.hat
MannWhitney_func <- function(Y1, delta, X1, T1) {
m <- sum(X1 == 1)
n <- sum(X1 == 0)
MW.score <- numeric(length(T1))
for(i in seq(1, length(T1))) {
MW.score[i] <- sum(T1[i] > T1) - sum(T1[i] < T1)
}
ts <- sum(MW.score[X1 == 1])
sigma2 <- sum(MW.score ^ 2) / (m + n)
v <- m * n * sigma2 / (m + n - 1)
return(list(z = sum(ts) / sqrt(v), score = MW.score, tau = sum(ts) / m / n))
}
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
C <- rexp(n = size, rate = C.rate)
Y1 <- ifelse(T1 < C, T1, C)
delta <- ifelse(T1 < C, 1, 0)
Gehan_func(Y1, delta, X1)
MannWhitney_func(Y1, delta, X1, T1)
impute_binary_tau(Y1, delta, X1, T1)$tau.hat
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
C <- rexp(n = size, rate = C.rate)
Y1 <- ifelse(T1 < C, T1, C)
delta <- ifelse(T1 < C, 1, 0)
Gehan_func(Y1, delta, X1)
MannWhitney_func(Y1, delta, X1, T1)
impute_binary_tau(Y1, delta, X1, T1)$tau.hat
knitr::opts_chunk$set(echo = TRUE)
library(survival)
source("GC_imputation_func.R")
B <- 5000
size <- 2000
C.rate <- 0.68
sim <- replicate(n = B, expr = {
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
C <- rexp(n = size, rate = C.rate)
Y1 <- ifelse(T1 < C, T1, C)
delta <- ifelse(T1 < C, 1, 0)
return(list(median1 = median(T11),
median2 = median(T12),
tau = MannWhitney_func(Y1, delta, X1, T1)$tau))
})
mean(unlist(sim[1, ]))
mean(unlist(sim[2, ]))
mean(unlist(sim[3, ]))
par(mfrow = c(1, 2))
curve(1 - pweibull(x, shape = 2, scale = 1.2), from = 0, to = 8, xlab = "t", ylab = "survival")
curve(1 - pweibull(x, shape = 0.5, scale = 2), from = 0, to = 8, lty = 2, add = TRUE)
legend("topright", legend = c("k=2, lambda=1.2", "k=0.5, lambda=2"), lty = c(1, 2))
curve(dweibull(x, shape = 2, scale = 1.2), from = 0, to = 5, xlab = "t", ylab = "density",
ylim = c(0, 1.5))
curve(dweibull(x, shape = 0.5, scale = 2), from = 0, to = 5, lty = 2, add = TRUE)
legend("topright", legend = c("k=2, lambda=1.2", "k=0.5, lambda=2"), lty = c(1, 2))
MannWhitney_func <- function(X1, T1) {
m <- sum(X1 == 1)
n <- sum(X1 == 0)
MW.score <- numeric(length(T1))
for(i in seq(1, length(T1))) {
MW.score[i] <- sum(T1[i] > T1) - sum(T1[i] < T1)
}
ts <- sum(MW.score[X1 == 1])
sigma2 <- sum(MW.score ^ 2) / (m + n)
v <- m * n * sigma2 / (m + n - 1)
return(list(z = sum(ts) / sqrt(v), score = MW.score, tau = sum(ts) / m / n))
}
B <- 5000
size <- 2000
sim <- replicate(n = B, expr = {
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
return(list(median1 = median(T11),
median2 = median(T12),
tau = MannWhitney_func(X1, T1)$tau))
})
mean(unlist(sim[1, ]))
mean(unlist(sim[2, ]))
mean(unlist(sim[3, ]))
B <- 5000
size <- 2000
sim <- replicate(n = B, expr = {
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.21)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
return(list(median1 = median(T11),
median2 = median(T12),
tau = MannWhitney_func(X1, T1)$tau))
})
mean(unlist(sim[1, ]))
mean(unlist(sim[2, ]))
mean(unlist(sim[3, ]))
B <- 5000
size <- 2000
sim <- replicate(n = B, expr = {
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.22)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
return(list(median1 = median(T11),
median2 = median(T12),
tau = MannWhitney_func(X1, T1)$tau))
})
mean(unlist(sim[1, ]))
mean(unlist(sim[2, ]))
mean(unlist(sim[3, ]))
B <- 5000
size <- 2000
sim <- replicate(n = B, expr = {
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
return(list(median1 = median(T11),
median2 = median(T12),
tau = MannWhitney_func(X1, T1)$tau))
})
mean(unlist(sim[1, ]))
mean(unlist(sim[2, ]))
mean(unlist(sim[3, ]))
B <- 5000
size <- 2000
set.seed(20200706)
MW.sim <- replicate(n = B, expr = {
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
return(MannWhitney_func(X1, T1)$z)
})
mean(abs(MW.sim) > qnorm(0.975))
B <- 5000
size <- 2000
set.seed(20200706)
MW.sim <- replicate(n = B, expr = {
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T1 <- rweibull(n = size, shape = 2, scale = 1.2)
return(MannWhitney_func(X1, T1)$z)
})
mean(abs(MW.sim) > qnorm(0.975))
B <- 5000
size <- 2000
# set.seed(20200706)
MW.sim <- replicate(n = B, expr = {
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
return(MannWhitney_func(X1, T1)$z)
})
mean(abs(MW.sim) > qnorm(0.975))
B <- 5000
size <- 2000
C.rate <- 1e-5
set.seed(20200706)
Gehan.sim <- replicate(n = B, expr = {
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T1 <- rweibull(n = size, shape = 2, scale = 1.2)
C <- rexp(n = size, rate = C.rate)
Y1 <- ifelse(T1 < C, T1, C)
delta <- ifelse(T1 < C, 1, 0)
return(list(Gehan_func(Y1, delta, X1)$z,
mean(delta[X1 == 1]),
mean(delta[X1 == 0])))
})
mean(abs(unlist(Gehan.sim[1, ])) > qnorm(0.975))
mean(unlist(Gehan.sim[2, ]))
mean(unlist(Gehan.sim[3, ]))
B <- 5000
size <- 2000
C.rate <- 1
set.seed(20200706)
Gehan.sim <- replicate(n = B, expr = {
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T1 <- rweibull(n = size, shape = 2, scale = 1.2)
C <- rexp(n = size, rate = C.rate)
Y1 <- ifelse(T1 < C, T1, C)
delta <- ifelse(T1 < C, 1, 0)
return(list(Gehan_func(Y1, delta, X1)$z,
mean(delta[X1 == 1]),
mean(delta[X1 == 0])))
})
mean(abs(unlist(Gehan.sim[1, ])) > qnorm(0.975))
mean(unlist(Gehan.sim[2, ]))
mean(unlist(Gehan.sim[3, ]))
B <- 5000
size <- 2000
C.rate <- 1e-5
set.seed(20200706)
Gehan.sim <- replicate(n = B, expr = {
X1 <- rbinom(n = size, size = 1, prob = 0.5)
T11 <- rweibull(n = size, shape = 2, scale = 1.2)
T12 <- rweibull(n = size, shape = 0.5, scale = 2)
T1 <- ifelse(X1 == 1, T11, T12)
C <- rexp(n = size, rate = C.rate)
Y1 <- ifelse(T1 < C, T1, C)
delta <- ifelse(T1 < C, 1, 0)
return(list(Gehan_func(Y1, delta, X1)$z,
mean(delta[X1 == 1]),
mean(delta[X1 == 0])))
})
mean(abs(unlist(Gehan.sim[1, ])) > qnorm(0.975))
mean(unlist(Gehan.sim[2, ]))
mean(unlist(Gehan.sim[3, ]))
